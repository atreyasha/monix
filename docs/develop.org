#+STARTUP: overview
#+OPTIONS: ^:nil
#+OPTIONS: p:t

** Tasks
**** Long-term
***** Installation workflow
****** EITHER consider replacing ~cp~ with ~rsync~, which can preserve directory trees -> can encode directories similar to ~stow~ but with hard files instead of links
****** OR consider combining home and root partitions, such that ~stow~ can be used with symlinks
******* need to think more about the practicality and necessity of this
******* perhaps hard-copies are enough since root-level configuration files are not likely to change

***** Network
****** consider changing to another network manager such as ~connman~ for faster boot and resolving
****** need to change many scripts in ~monix~ and ~dotfiles~ to reflect overall changes

***** File-system encryption
****** practice this on new phyiscal system in September 
****** practice this on virtual machine with new ~dotfiles~ workflows as well
****** reinstall arch on own hardware with encrypted version
****** add this information to readme pre-monix
****** test all of these changes with virtual machine, but try to keep cache of packages instead of always re-installing -> think of the best way to do this, maybe with a shared folder

***** Conf-path management
****** think about adding file or directory checks in ~systemd~, ~udev~ and ~acpi~ rules, since these files could be missing if ~dotfiles~ is not used
******* maybe ~systemd~ has a file-existence checking option as a requisite 
******* however, these frameworks will perform error handling well
******* handling errors for them could lead to other problems
******* best-case scenario would be user-level alternatives, but these are likely not possible
******* i3blocks persistent queries are not very elegant and perhaps a bad use of resources -> also annoying since changes will always occur

***** General
****** Look into slow wifi disabling on login -> appears to be slowed down due to docker booting up
        
***** Sync
****** think about adding ~sync~ functionality in case tests fail, which automatically corrects tests instead of expecting the user to do this manually 
******* this could help for ~pip~ packages as well
        
***** Downgrade
****** add pacman hook to update/log downgraded packages when feature is available upstream
****** add workflow to install ~downgrade~ packages from a file when available upstream
******* add conditional when installing to check array is not empty
******* add conditional to do an emptiness check for ~pip~ packages as well
****** add a new test suite to check for downgraded packages sanity

***** Packages and cleaning 
****** look through ~pacman~ package list and remove unnecessary packages
****** modify pacman hook for cleaning of ~yay~ caches with paccache: https://github.com/Jguer/yay/issues/772
