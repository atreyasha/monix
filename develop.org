#+STARTUP: overview
#+OPTIONS: ^:nil
#+OPTIONS: p:t

** Tasks
*** Migration to NixOS by emulating current build
***** TODO sort out clipboard pasting into guest system -> faster configs
***** TODO figure out guest additions inside virtualbox basic image
***** add dbus instructions to ~.xinitrc~: https://nixos.wiki/wiki/I3
***** figure out how to keep only recent builds and not all
*** Backup
***** re-arrange system to keep personal data in single location, which should be backed up regularly
    
** Reproduction logs for Arch Linux
*** pacman hooks
***** use ~pacdiff -o~ for checking differences in configuration files 
***** use ~paccache -rvk2~ to only keep last two caches
*** linux-lts
***** install =linux-lts= and uninstall =linux= to overcome occasional dark display upon waking from sleep with DP monitor
***** error message: =kernel: i915 0000:00:02.0: [drm] *ERROR* failed to enable link training=
***** this bug has not occurred with linux-lts, some discussion shows this could be a resolution: see https://bbs.archlinux.org/viewtopic.php?id=196370 and https://www.reddit.com/r/archlinux/comments/4oa926/new_install_intel_dp_start_link_train_i915_failed/
*** sudo
***** install =sudo=
***** add or uncomment the following =%wheel      ALL=(ALL) ALL= to allow for wheel users to access sudo
***** use =visudo= to prevent any syntax errors
*** beep
***** disable analog beep =sudo echo "blacklist pcspkr" | tee /etc/modprobe.d/nobeep.conf=      
*** tlp-runner
***** instal =tlp= 
***** copy existing =tlp.conf= to =/etc/tlp.conf= for disabling bluetooth, wifi and wwan at startup
***** run =sudo systemctl enable tlp.service= and =sudo systemctl start tlp.service=  
*** light
***** install =light= for managing backlight
***** add local user to =video= group by running =usermod -a -G video shankar=  
*** mesa-video-driver
***** install =mesa= package and avoid =xf86-video-intel=
*** udev-battery-rules
***** copy =60-onbattery.rules= and =61-onpower.rules= to =/etc/udev/rules.d=
***** reload rules =sudo udevadm control --reload=
*** ufw-firewall
***** install =ufw= 
***** retain default settings that deny incoming requests while allowing outgoing
***** run =sudo systemctl enable ufw.service= and =sudo systemctl start ufw.service=
***** run =sudo ufw enable= to enable it outside systemd
*** openssh
***** install =openssh=
***** run =systemctl --user enable ssh-agent.service= and =systemctl --user start ssh-agent.service= on local file
***** =SSH_AUTH_SOCK= environmental variable needs to be set in shellrc
***** stow =~/.ssh/config= with instructions for adding keys to ssh agent
*** gnupg
***** install =gnupg=
***** stow =~/.gnupg/gpg-agent= to get relevant agent functionalities and cached keys
*** acpi-audio-jack
***** install =acpid=
***** copy =audio_jack= to =/etc/acpi/events=
***** run =sudo sytemctl enable acpid.service= and =sudo sytemctl start acpid.service=
*** i3-cycle
***** run =pip install --user i3-cycle=
***** move raw python script to =~/bin= because installed script gets slowed down due to path regexes
*** pre-sleep-i3lock
***** all i3lock scripts have =sleep 0.1= to prevent i3 mode red color from being captured in screenshot
***** i3lock post-suspend requires =sleep 1= to prevent short real display
***** i3lock uses no forking =-n= for simple lock to ensure it does not work in background; this allows dpms changes to persist until unlock
***** i3lock was tested with concurrent lock and suspend, and there is a PID check to ensure no double i3locks are created
***** copy =pre-sleep@.service= to =/etc/systemd/system=
***** run =sudo systemctl enable pre-sleep@$USER.service=, remember to replace =$USER= with the actual user
***** suspension after i3lock is delayed if less than or equal to 10 seconds are left before dpms down -> not sure about this but it is possible
***** *buggy, needs more testing:* =xset -display :0 dpms force on= to ensure screen lights up after suspend, in case it was locked and dimmed earlier
*** early-kms
***** add =MODULES=(intel_agp i915)= to =/etc/mkinitcpio.conf=
***** run =sudo mkinitcpio -P=
*** timesync
***** run =sudo systemctl enable systemd-timesyncd.service= in order to sync time
*** fonts
***** install =ttf-dejavu=, =ttf-font-awesome=, =otf-font-awesome= and AUR =nerd-fonts-bitstream-vera-mono= for terminal font
***** update cache using =fc-cache -fv=
***** i3 uses fc-match to find best font which mostly ends up defaulting to =DejaVu Sans=, which is why it appears as a default
*** zsh
***** install =zsh= and use as main shell with =chsh -s /usr/bin/zsh=
*** avahi and cups
***** systemd-level services need to be initialized for this
